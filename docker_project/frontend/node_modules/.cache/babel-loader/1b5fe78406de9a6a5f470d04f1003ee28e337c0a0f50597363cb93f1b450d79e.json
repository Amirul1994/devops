{"ast":null,"code":"var _jsxFileName = \"E:\\\\docker_project\\\\frontend\\\\docker_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [user, setUser] = useState({\n    name: '',\n    age: '',\n    profession: '',\n    password: '',\n    address: ''\n  });\n  const [signupSuccess, setSignupSuccess] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [loginError, setLoginError] = useState(false);\n  const [jwtToken, setJwtToken] = useState(null); // Store the JWT token here\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  const handleSignup = () => {\n    // Here you would send the data to the backend for insertion into the database\n    // For demonstration purposes, let's assume successful signup\n    console.log('Sending to backend:', user);\n    setSignupSuccess(true);\n  };\n  const handleLogin = () => {\n    // Here you would handle the login logic\n    // For demonstration purposes, let's assume successful login\n    if (user.name === 'demo' && user.password === 'password') {\n      setLoggedInUser(user);\n      setLoginError(false);\n\n      // Simulate token retrieval (replace with actual token from backend)\n      const mockToken = 'your_jwt_token_here';\n      setJwtToken(mockToken);\n    } else {\n      setLoginError(true);\n    }\n  };\n  const handleSearch = () => {\n    // Here you would handle the search logic\n    console.log('Search logic goes here');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsLogin(!isLogin),\n      children: [\"Switch to \", isLogin ? 'Signup' : 'Login']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isLogin ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: handleInputChange,\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: handleInputChange,\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Invalid name or password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), signupSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Signup is successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), loggedInUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-details\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", loggedInUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SugM33gg9dBWUQFyh39cPbD5pBk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","isLogin","setIsLogin","user","setUser","name","age","profession","password","address","signupSuccess","setSignupSuccess","loggedInUser","setLoggedInUser","loginError","setLoginError","jwtToken","setJwtToken","handleInputChange","e","value","target","handleSignup","console","log","handleLogin","mockToken","handleSearch","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","style","color","_c","$RefreshReg$"],"sources":["E:/docker_project/frontend/docker_frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(true);\n  const [user, setUser] = useState({\n    name: '',\n    age: '',\n    profession: '',\n    password: '',\n    address: '',\n  });\n  const [signupSuccess, setSignupSuccess] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [loginError, setLoginError] = useState(false);\n  const [jwtToken, setJwtToken] = useState(null); // Store the JWT token here\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleSignup = () => {\n    // Here you would send the data to the backend for insertion into the database\n    // For demonstration purposes, let's assume successful signup\n    console.log('Sending to backend:', user);\n    setSignupSuccess(true);\n  };\n\n  const handleLogin = () => {\n    // Here you would handle the login logic\n    // For demonstration purposes, let's assume successful login\n    if (user.name === 'demo' && user.password === 'password') {\n      setLoggedInUser(user);\n      setLoginError(false);\n\n      // Simulate token retrieval (replace with actual token from backend)\n      const mockToken = 'your_jwt_token_here';\n      setJwtToken(mockToken);\n    } else {\n      setLoginError(true);\n    }\n  };\n\n  const handleSearch = () => {\n    // Here you would handle the search logic\n    console.log('Search logic goes here');\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => setIsLogin(!isLogin)}>\n        Switch to {isLogin ? 'Signup' : 'Login'}\n      </button>\n\n      {isLogin ? (\n        <div className=\"login-form\">\n          <input type=\"text\" placeholder=\"Name\" onChange={handleInputChange} name=\"name\" />\n          <input type=\"password\" placeholder=\"Password\" onChange={handleInputChange} name=\"password\" />\n          <button onClick={handleLogin}>Login</button>\n          {loginError && <p style={{ color: 'red' }}>Invalid name or password</p>}\n        </div>\n      ) : (\n        <div className=\"signup-form\">\n          {/* ... (other input fields) */}\n          <button onClick={handleSignup}>Signup</button>\n          {signupSuccess && <p>Signup is successful!</p>}\n        </div>\n      )}\n\n      {loggedInUser && (\n        <div className=\"user-details\">\n          <p>Name: {loggedInUser.name}</p>\n          {/* ... (other user details) */}\n        </div>\n      )}\n\n      {isLogin && (\n        <div className=\"search-section\">\n          <input type=\"text\" placeholder=\"Search by name\" />\n          <button onClick={handleSearch}>Search</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}