{"ast":null,"code":"var _jsxFileName = \"E:\\\\docker_project\\\\frontend\\\\docker_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\n//import axios from 'axios'; // Import Axios\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [user, setUser] = useState({\n    name: '',\n    age: '',\n    profession: '',\n    password: '',\n    address: ''\n  });\n  const [signupSuccess, setSignupSuccess] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [loginError, setLoginError] = useState(false);\n  const [jwtToken, setJwtToken] = useState(null); // Store the JWT token here\n  const [searchResult, setSearchResult] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  const handleSignup = async () => {\n    try {\n      // Make the API request for signup\n      const response = await axios.post('your_api_endpoint_here', user);\n      if (response.status === 201) {\n        console.log('Signup successful!');\n        setSignupSuccess(true);\n      } else {\n        console.log('Signup failed.');\n      }\n    } catch (error) {\n      console.error('Error during signup:', error);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      // Make the API request for login\n      const response = await axios.post('your_login_api_endpoint_here', user);\n      if (response.status === 200) {\n        console.log('Login successful!');\n        setLoggedInUser(user);\n        setLoginError(false);\n\n        // Simulate token retrieval (replace with actual token from backend)\n        const mockToken = 'your_jwt_token_here';\n        setJwtToken(mockToken);\n      } else {\n        console.log('Login failed.');\n        setLoginError(true);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  const handleSearch = async () => {\n    try {\n      // Make the API request for search\n      const response = await axios.get(`your_search_api_endpoint_here?name=${user.name}`, {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      });\n      if (response.status === 200) {\n        setSearchResult(response.data); // Assuming the response contains user details\n      } else {\n        setSearchResult('User not found');\n      }\n    } catch (error) {\n      console.error('Error during search:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [loggedInUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-details\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", loggedInUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), searchResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-result\",\n      children: searchResult === 'User not found' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", searchResult.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", searchResult.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Profession: \", searchResult.profession]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", searchResult.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"suAX2BpJxmQnbW8DaA8QpRzhmpM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLogin","setIsLogin","user","setUser","name","age","profession","password","address","signupSuccess","setSignupSuccess","loggedInUser","setLoggedInUser","loginError","setLoginError","jwtToken","setJwtToken","searchResult","setSearchResult","handleInputChange","e","value","target","handleSignup","response","axios","post","status","console","log","error","handleLogin","mockToken","handleSearch","get","headers","Authorization","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/docker_project/frontend/docker_frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\n//import axios from 'axios'; // Import Axios\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(true);\n  const [user, setUser] = useState({\n    name: '',\n    age: '',\n    profession: '',\n    password: '',\n    address: '',\n  });\n  const [signupSuccess, setSignupSuccess] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [loginError, setLoginError] = useState(false);\n  const [jwtToken, setJwtToken] = useState(null); // Store the JWT token here\n  const [searchResult, setSearchResult] = useState(null);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleSignup = async () => {\n    try {\n      // Make the API request for signup\n      const response = await axios.post('your_api_endpoint_here', user);\n\n      if (response.status === 201) {\n        console.log('Signup successful!');\n        setSignupSuccess(true);\n      } else {\n        console.log('Signup failed.');\n      }\n    } catch (error) {\n      console.error('Error during signup:', error);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      // Make the API request for login\n      const response = await axios.post('your_login_api_endpoint_here', user);\n\n      if (response.status === 200) {\n        console.log('Login successful!');\n        setLoggedInUser(user);\n        setLoginError(false);\n\n        // Simulate token retrieval (replace with actual token from backend)\n        const mockToken = 'your_jwt_token_here';\n        setJwtToken(mockToken);\n      } else {\n        console.log('Login failed.');\n        setLoginError(true);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n\n  const handleSearch = async () => {\n    try {\n      // Make the API request for search\n      const response = await axios.get(`your_search_api_endpoint_here?name=${user.name}`, {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`,\n        },\n      });\n\n      if (response.status === 200) {\n        setSearchResult(response.data); // Assuming the response contains user details\n      } else {\n        setSearchResult('User not found');\n      }\n    } catch (error) {\n      console.error('Error during search:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* ... (other components) */}\n\n      {loggedInUser && (\n        <div className=\"user-details\">\n          <p>Name: {loggedInUser.name}</p>\n          {/* ... (other user details) */}\n        </div>\n      )}\n\n      {searchResult && (\n        <div className=\"search-result\">\n          {searchResult === 'User not found' ? (\n            <p>User not found</p>\n          ) : (\n            <>\n              <p>Name: {searchResult.name}</p>\n              <p>Age: {searchResult.age}</p>\n              <p>Profession: {searchResult.profession}</p>\n              <p>Address: {searchResult.address}</p>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,IAAI,EAAE,EAAE;IACRC,GAAG,EAAE,EAAE;IACPC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAM0B,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEhB,IAAI;MAAEiB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCnB,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACE,IAAI,GAAGiB;IAAM,CAAC,CAAC;EACrC,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,wBAAwB,EAAExB,IAAI,CAAC;MAEjE,IAAIsB,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjCnB,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAC,MAAM;QACLkB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF;MACA,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,8BAA8B,EAAExB,IAAI,CAAC;MAEvE,IAAIsB,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChCjB,eAAe,CAACV,IAAI,CAAC;QACrBY,aAAa,CAAC,KAAK,CAAC;;QAEpB;QACA,MAAMkB,SAAS,GAAG,qBAAqB;QACvChB,WAAW,CAACgB,SAAS,CAAC;MACxB,CAAC,MAAM;QACLJ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5Bf,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAACS,GAAG,CAAE,sCAAqChC,IAAI,CAACE,IAAK,EAAC,EAAE;QAClF+B,OAAO,EAAE;UACPC,aAAa,EAAG,UAASrB,QAAS;QACpC;MACF,CAAC,CAAC;MAEF,IAAIS,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BT,eAAe,CAACM,QAAQ,CAACa,IAAI,CAAC,CAAC,CAAC;MAClC,CAAC,MAAM;QACLnB,eAAe,CAAC,gBAAgB,CAAC;MACnC;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEnC,OAAA;IAAK2C,SAAS,EAAC,KAAK;IAAAC,QAAA,GAGjB5B,YAAY,iBACXhB,OAAA;MAAK2C,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3B5C,OAAA;QAAA4C,QAAA,GAAG,QAAM,EAAC5B,YAAY,CAACP,IAAI;MAAA;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B,CACN,EAEA1B,YAAY,iBACXtB,OAAA;MAAK2C,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BtB,YAAY,KAAK,gBAAgB,gBAChCtB,OAAA;QAAA4C,QAAA,EAAG;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAErBhD,OAAA,CAAAE,SAAA;QAAA0C,QAAA,gBACE5C,OAAA;UAAA4C,QAAA,GAAG,QAAM,EAACtB,YAAY,CAACb,IAAI;QAAA;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChChD,OAAA;UAAA4C,QAAA,GAAG,OAAK,EAACtB,YAAY,CAACZ,GAAG;QAAA;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BhD,OAAA;UAAA4C,QAAA,GAAG,cAAY,EAACtB,YAAY,CAACX,UAAU;QAAA;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5ChD,OAAA;UAAA4C,QAAA,GAAG,WAAS,EAACtB,YAAY,CAACT,OAAO;QAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,eACtC;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5C,EAAA,CAxGQD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AA0GZ,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}